# 1. 누적 합을 구한다.
# 2. 누적 합을 m으로 나눈 나머지가 같은 것끼리 분류한다.
# 3. 누적 합의 나머지가 같은 것들 중에서 2개를 조합한다. 이 때 뽑힌 누적합 인덱스를 각각 i와 j로 한다.
# 4. i+1 부터 j까지 구간의 구간합(j번째 누적합-i번째 누적합)은 m으로 나누어 떨어진다.
# 5. 단, 누적 합의 나머지의 값이 0인 원소들은 혼자만으로도 정답이 된다.

N, M = map(int, input().split()) # 5 3
# 맨 끝에 0을 넣는 이유?
# 누적합을 구할 때 A[i-1]로 맨 끝을 누적하기때문에 
A = list(map(int, input().split())) + [0] # 1 2 3 1 2
cnt = [0] * M # [0, 0, 0]

for i in range(N): # 0 1 2 3 4
    # 1. 누적합을 구한다
    # 1 3 6 7 9 
    A[i] += A[i-1]
    # 2. 누적합을 M으로 나눈 나머지가 같은 것끼리 분류
    # 1%3 = cnt[1], 3%3 = cnt[0], 6%3 = cnt[0], 7%3= cnt[1], 9%3 = cnt[0]
    # cnt = [3, 2, 0]
    cnt[A[i] % M] += 1

ans = cnt[0] # 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수

for i in cnt: # 3 2 0
    # 누적 합의 나머지가 같은 것들 중에서 2개를 조합한다.
    ans += i * (i-1) // 2
print(ans)
